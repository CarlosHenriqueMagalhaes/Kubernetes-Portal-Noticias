Verificar quais pods, svcs e configmaps estão rodando:

kubectl get pods
kubectl get svc
kubectl get configmap
----------------------------------------------------------
Descrever (mostrar os pod, svcs e configmaps em detalhes):

kubectl describe pod portal-noticias
kubectl describe pod sistema-noticias
kubectl describe pod db-noticias

kubectl describe svc svc-portal-noticias
kubectl describe svc svc-sistema-noticias
kubectl describe svc svc-db-noticias

kubectl describe configmap dp-configmap
----------------------------------------------------------
Criar os pods, svcs e configmaps do projeto:

kubectl apply -f \portal-noticias.yaml
kubectl apply -f \sistema-noticias.yaml
kubectl apply -f \db-noticias.yaml

kubectl apply -f \svc-portal-noticias.yaml
kubectl apply -f \svc-sistema-noticias.yaml
kubectl apply -f \svc-db-noticias.yaml

kubectl apply -f \db-configmap.yaml
kubectl apply -f \sistema-configmap.yaml
----------------------------------------------------------
deletar pod:

kubectl delete pod db-noticias
----------------------------------------------------------
acessar de modo interativo do db-noticias:

kubectl exec -it db-noticias -- bash (comando exibido na Alura não funcionou para mim)
mysql -u root -p

Enter password:
q1w2e3r4

show databases;
use empresa;
show tables;
select * from usuario;
# exit
----------------------------------------------------------
replicasets:

kubectl get replicasets (mostra os replicasets criados)
----------------------------------------------------------
deployment:

kubectl apply -f \nginx-deployment.yaml --record (cria um deployment)
kubectl annotate deployment nginx-deployment kubernets.io/change-cause= "Definindo a imagem com versão: latest" (anota o deployment com um flag para saber qual é qual)

kubectl rollout history deployment nginx-deployment (exibe o historico dos deployments criados)

kubectl rollout undo deployment <nginx-deployment> --to-revision=<1> (volta para a versão desejada)